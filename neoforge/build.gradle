import org.apache.tools.ant.filters.LineContains

plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.105'
    id 'java-library'
}
base {
    archivesName = "${archives_base_name}-neoforge"
}

jarJar.enable()

if (file('src/main/resources/enchantmentconfig.cfg').exists()) {
    minecraft.accessTransformers.file file('src/main/resources/enchantmentconfig.cfg')
}

runs {
    configureEach {
        modSource sourceSets.main
        modSource sourceSets.test
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    compileOnly project(path: ':common', configuration: 'api')
    compileOnly project(":common")
    testCompileOnly project(path: ':common', configuration: 'api')
    testCompileOnly project(":common")
}

// NeoGradle compiles the game, but we don't want to add our common code to the game's code
Spec<Task> notNeoTask = { Task it -> !it.name.startsWith("neo") } as Spec<Task>

tasks.withType(JavaCompile).matching(notNeoTask).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

tasks.withType(Javadoc).matching(notNeoTask).configureEach {
    source(project(":common").sourceSets.main.allJava)
}

tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources

    filesMatching("*.mixins.json") {
        filter(LineContains, negate: true, contains: [ 'refmap' ] )
    }
}

processTestResources {
    from project(":common").sourceSets.test.resources
}

tasks.named('jarJar').configure {
    archiveClassifier = ""
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
        maven {
            name = "merchantpug"
            url = "https://maven.merchantpug.net/releases"
            credentials {
                username System.getenv('MAVEN_USERNAME')
                password System.getenv('MAVEN_PASSWORD')
            }
            authentication {
                create("basic", BasicAuthentication)
            }
        }
    }
}
